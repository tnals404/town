<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="Dao.ChatDAO">
	<select id="checkNull" parameterType="messagedto" resultType="messagedto">
	select * from chat_message where (member_id = #{member_id} and touser_id = #{touser_id})
	or (touser_id = #{member_id} and member_id = #{touser_id}) 
	order by message_sendAt ASC ;
	</select>
	
	<insert id="createChatroom" parameterType="chatroomdto">
	INSERT INTO chat_room() VALUES ();
	<selectKey resultType="int" keyProperty="chat_id" order="AFTER">
        SELECT LAST_INSERT_ID()
        </selectKey>
	</insert>
	
	<insert id="insertMessage" parameterType="messagedto">
	INSERT INTO chat_message() VALUES (default, #{message_content}, #{message_sendAt}, #{member_id}, #{chat_id}, #{touser_id}, default);
	</insert>
	
	<insert id="createChatlist" parameterType="chatlistdto">
	INSERT INTO chat_list(member_id, chat_id, to_id) VALUES (#{member_id}, #{chat_id}, #{to_id}); 
	</insert>
	
	<select id="selectChatlist" parameterType="chatlistdto" resultType="chatlistdto">
	SELECT * FROM chat_list where (member_id = #{member_id}) or (to_id = #{member_id});
	</select>

	<select id="countIsread" parameterType="messagedto">
	SELECT COUNT(*) FROM chat_message where (chat_id = #{chat_id}) and (isread = 0) and (member_id != #{member_id});
	</select>
	
	<select id="latestContent" parameterType="messagedto">
	SELECT message_content FROM chat_message where (chat_id = #{chat_id})
	order by message_sendAt DESC 
	limit 1 offset 0;
	</select>
	
    <update id="readMessage" parameterType="messagedto">
    UPDATE chat_message SET isread = 1 where touser_id = #{member_id} and chat_id = #{chat_id};
    </update>
	
	<select id="selectChatid" parameterType="messagedto">
	SELECT chat_id FROM chat_message where ((member_id = #{member_id}) and (touser_id = #{touser_id})) or ((member_id = #{touser_id}) and (touser_id = #{member_id}));
	</select>
	
	<select id="selectMessageid" parameterType="messagedto">
	SELECT message_id FROM chat_message where ((message_sendAt = #{message_sendAt}) and (member_id = #{member_id}) and (touser_id = #{touser_id}));
	</select>
	
	<select id="selectMessagebyid" parameterType="int" resultType="messagedto">
	SELECT * FROM chat_message WHERE (message_id = #{message_id});
	</select>
	
	<update id="deletechatmessage" parameterType="messagedto">
		UPDATE chat_message SET message_content = #{message_content} WHERE message_id = #{message_id}; 
	</update>
	
	<select id="doestouseridexist" parameterType="string">
		SELECT member_id FROM member WHERE (member_id = #{touser_id});
	</select>
  </mapper>