<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Dao.BoardDAO1">

<!-- 글 작성시 db에 저장 -->
<insert id="insertBoard" parameterType="boarddto">
	insert into board
	(
		board_name_inner, 
		board_title, 
		board_contents, 
		board_preview,
		board_imgurl, 
		board_videourl, 
		board_fileurl, 
		place_name, 
		place_road_address, 
		place_address,
		place_tel, 
		place_lat, 
		place_long,
		writer, 
		town_id
	)
	values 
	(
		#{board_name_inner}, 
		#{board_title}, 
		#{board_contents}, 
		#{board_preview},
		#{board_imgurl}, 
		#{board_videourl}, 
		#{board_fileurl}, 
		#{place_name}, 
		#{place_road_address}, 
		#{place_address},
		#{place_tel}, 
		#{place_lat}, 
		#{place_long},
		#{writer}, 
		#{town_id}
	)
</insert>

<!-- 관리자가 공지사항 올릴시 -->
<insert id="insertNoticeBoard" parameterType="java.util.List">
	insert into board
	(
		board_name_inner, 
		board_title, 
		board_contents, 
		board_imgurl, 
		board_fileurl, 
		board_preview,
		writer, 
		town_id
	) values 
	<foreach collection="query" item="dto" separator=",">
		(
			#{dto.board_name_inner}, 
			#{dto.board_title}, 
			#{dto.board_contents}, 
			#{dto.board_imgurl}, 
			#{dto.board_fileurl}, 
			#{dto.board_preview},
			#{dto.writer}, 
			#{dto.town_id}
		)
	</foreach>
</insert>

<!-- 로그인한 회원의 동네 id를 가져옴 -->
<select id="getMemberTownId" parameterType="String" resultType="int">
	select town_id from member where member_id = #{member_id};
</select>

<!-- 게시판 소분류 선택시 게시글 개수 가져오기 -->
<select id="getArticleCount" parameterType="hashmap" resultType="int">
	select count(*) from board 
	where board_name_inner = #{board_name_inner} and town_id = #{town_id}
</select>

<!-- 게시판 소분류 선택시 게시글 목록 가져오기(페이징 처리O) -->
<select id="getPagingBoardlist" parameterType="hashmap" resultType="boarddto">
	select * from board 
	where board_name_inner = #{board_name_inner} and town_id = #{town_id}
	order by writing_time desc, update_time desc
	limit #{limitindex}, #{limitcount}
</select>

<!-- 게시판 검색시 게시글 개수 가져오기 -->
<select id="getBoardSearchCount" parameterType="hashmap" resultType="int">
	select count(*) from board 
	where board_name_inner = #{board_name_inner} and 
	town_id = #{town_id} and (
	<foreach item="sort" separator=" or " collection="sortList">
		${sort} like #{keyword}
	</foreach>)
</select>

<!-- 게시판 검색시 게시글 가져오기(페이징 처리 O) -->
<select id="getBoardSearchList" parameterType="hashmap" resultType="boarddto">
	select * from board 
	where board_name_inner = #{board_name_inner} and 
	town_id = #{town_id} and (
	<foreach item="sort" separator=" or " collection="sortList">
		${sort} like #{keyword}
	</foreach>)
	order by writing_time desc, update_time desc
	limit #{limitindex}, #{limitcount}
</select>

<!-- 회원의 동 이름 가져오기 -->
<select id="getMemberDongAddress" parameterType="int" resultType="String">
	select town_name from town where town_id = #{member_town_id}
</select>

<!-- 프로필 사진 업데이트 -->
<update id="updateProfileImage" parameterType="hashmap">
	update member set profile_image = #{profile_image}
	where member_id = #{member_id}
</update>

<!-- 회원이 관리자인지 아닌지 판단하기 -->
<select id="isAdmin" parameterType="String" resultType="int">
	select member_role from member where member_id = #{member_id}
</select>

<!-- town 테이블의 모든 동 이름 가져오기 -->
<select id="getAllTownName" resultType="String">
	select town_name from town order by town_id asc
</select>

</mapper>

